@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

@inject ICall<AddPost> AddPost

<AuthorizeView Context="authContext">
    <Authorized>
        <EditForm Model="@_newPost" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <InputTextArea id="content" class="form-control mb-2" @bind-Value="_newPost.Content" />
            </div>
            <button type="submit" class="btn btn-primary w-100 mb-3">Post</button>
        </EditForm>
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            You're not authorized! <a href="/auth/sign-in">Sign In</a> to add and remove posts.
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private NewPost _newPost = new();

    [Parameter]
    public EventCallback PostAdded { get; set; }

    private async Task HandleValidSubmit()
    {
        var request = new AddPost()
        {
            Content = _newPost.Content!
        };
        await AddPost.Call(request);

        _newPost = new();

        await PostAdded.InvokeAsync();
    }

    private class NewPost()
    {
        [Required]
        public string? Content { get; set; }
    }
}